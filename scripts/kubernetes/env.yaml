apiVersion: v1
kind: Pod
metadata:
  labels:
    com.msgbyte.tailchat.k8s.network/internal: "true"
    com.msgbyte.tailchat.k8s.service: mongo
  name: mongo
  namespace: tailchat
spec:
  containers:
    - image: mongo:4
      name: mongo
      resources: {}
      volumeMounts:
        - mountPath: /data/db
          name: data
  restartPolicy: OnFailure
  volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data
status: {}
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    com.msgbyte.tailchat.k8s.network/internal: "true"
    com.msgbyte.tailchat.k8s.service: redis
  name: redis
  namespace: tailchat
spec:
  containers:
    - image: redis:alpine
      name: redis
      resources: {}
  restartPolicy: OnFailure
status: {}
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    com.msgbyte.tailchat.k8s.network/internal: "true"
    com.msgbyte.tailchat.k8s.service: minio
  name: minio
  namespace: tailchat
spec:
  containers:
    - args:
        - minio
        - server
        - /data
        - --console-address
        - :9001
      env:
        - name: MINIO_ROOT_PASSWORD
          value: com.msgbyte.tailchat
        - name: MINIO_ROOT_USER
          value: tailchat
      image: minio/minio
      name: minio
      resources: {}
      volumeMounts:
        - mountPath: /data
          name: storage
  restartPolicy: OnFailure
  volumes:
    - name: storage
      persistentVolumeClaim:
        claimName: storage
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    com.msgbyte.tailchat.k8s.service: data
  name: data
  namespace: tailchat
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    com.msgbyte.tailchat.k8s.service: storage
  name: storage
  namespace: tailchat
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
